{"version":3,"sources":["../node_modules/peerjs/dist sync","GlobalStyle.ts","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","GlobalStyle","createGlobalStyle","ContainerContent","styled","div","SocketConnection","io","transports","App","peer","Peer","Success","stream","Container","document","getElementById","videoElement","createElement","srcObject","autoplay","appendChild","on","console","log","call","ErrorCath","error","useEffect","navigator","mediaDevices","getDisplayMedia","video","then","ReactDOM","render","StrictMode"],"mappings":"8EAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,gGCNZC,EAAcC,YAAH,0WAuBXC,EAAmBC,IAAOC,IAAV,yM,iCCpBvBC,EAAmBC,YAAG,uCAAwC,CAAEC,WAAY,CAAC,eAwCpEC,MAtCf,WAEE,IAAMC,EAAO,IAAIC,IAEXC,EAAU,SAACC,GACf,IAAMC,EAAYC,SAASC,eAAe,aACpCC,EAAeF,SAASG,cAAc,SAC5CD,EAAaE,UAAYN,EACzBI,EAAaG,UAAW,EAExBN,EAAWO,YAAYJ,GAEvBX,EAAiBgB,GAAG,iBAAiB,SAACtB,GACpCuB,QAAQC,IAAIxB,EAAIa,GAChBH,EAAKe,KAAKzB,EAAIa,OAIZa,EAAY,SAACC,GACjBJ,QAAQC,IAAIG,IASd,OANAC,qBAAU,WACRC,UAAUC,aAAaC,gBAAgB,CACrCC,OAAO,IACNC,KAAKrB,EAASc,KAChB,IAGD,qCACE,cAACzB,EAAD,IACA,cAACE,EAAD,CAAkBH,GAAG,kBClC3BkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,W","file":"static/js/main.6f7e65ff.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 44;","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-family: Arial;\r\n    font-weight: normal;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: none;\r\n    text-decoration: none;\r\n    list-style: none;\r\n\r\n    body{\r\n      width: 100%;\r\n      height: 100%;\r\n      \r\n      img{\r\n        max-width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContainerContent = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #111;\r\n\r\n  > video {\r\n    max-width: 90%;\r\n  }\r\n`;","import React, { useEffect } from 'react';\nimport { ContainerContent, GlobalStyle } from './GlobalStyle';\nimport { io } from 'socket.io-client';\nimport Peer from 'peerjs';\n\nconst SocketConnection = io('http://localhost:3234/peerConnection', { transports: ['websocket'] })\n\nfunction App() {\n\n  const peer = new Peer();\n\n  const Success = (stream: MediaStream) => {\n    const Container = document.getElementById('Container');\n    const videoElement = document.createElement('video');\n    videoElement.srcObject = stream;\n    videoElement.autoplay = true;\n\n    Container!.appendChild(videoElement);\n\n    SocketConnection.on('get_main_peer', (id: string) => {\n      console.log(id, stream);\n      peer.call(id, stream);\n    })\n  }\n\n  const ErrorCath = (error: any) => {\n    console.log(error);\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices.getDisplayMedia({\n      video: true\n    }).then(Success, ErrorCath);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <ContainerContent id=\"Container\">\n\n      </ContainerContent>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}